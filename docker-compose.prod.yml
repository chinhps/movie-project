services:    
  mysql-movie:
    image: mysql:8.0
    container_name: mysql-movie-container
    ports:
      - 3308:3306
    env_file:
      - .env.docker
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-movie-production-volume:/var/lib/mysql
      - mysql-movie-production-volume-config:/etc/mysql
    networks:
      - movie_network

  movie-laravel-backend:
    container_name: movie-laravel-backend-container
    build:
      context: ./api-movie-project
      dockerfile: prod.Dockerfile
    env_file:
      - .env.docker
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${NEXT_PUBLIC_API_BACKEND}
      - API_SERVER_IMAGE=${API_SERVER_IMAGE}
      - DB_HOST=mysql-movie
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=root
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mysql-movie
    networks:
      - movie_network

  nginx-movie-laravel-backend:
    build:
      context: ./api-movie-project
      dockerfile: nginx.Dockerfile
    volumes:
      - ./api-movie-project/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 8000:80
    depends_on:
      - movie-laravel-backend
    networks:
      - movie_network

  media-server:
    build:
      context: ./server-m3u8
      dockerfile: Dockerfile
    container_name: media-server-container
    volumes:
      - ./server-m3u8/uploads:/var/www/uploads
      - ./server-m3u8/uploads-images:/var/www/uploads-images
    networks:
      - movie_network

  nginx-media-server:
    build:
      context: ./server-m3u8
      dockerfile: nginx.Dockerfile
    container_name: nginx-media-server-container
    volumes:
      - ./server-m3u8/uploads:/var/www/uploads
      - ./server-m3u8/uploads-images:/var/www/uploads-images
    depends_on:
      - media-server
    ports:
      - 8080:80
    networks:
      - movie_network

  movie-nextjs-fronted:
    container_name: movie-nextjs-fronted-container
    build:
      context: ./movie-project
      dockerfile: prod.Dockerfile
    env_file:
      - .env.docker
    depends_on:
      - nginx-movie-laravel-backend
      - nginx-media-server
    ports:
      - 3000:3000
    networks:
      - movie_network

networks:
  movie_network:
    name: movie_network
    driver: bridge
volumes:
  mysql-movie-production-volume:
  mysql-movie-production-volume-config: